# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Open Data Kit. This document is licensed under a
# Creative Commons Attribution 4.0 International License
# This file is distributed under the same license as the Open Data Kit
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Open Data Kit 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-05 12:11+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../openrosa-form-submission.rst:15
msgid "Form Submission API"
msgstr ""

#: ../../openrosa-form-submission.rst:17
msgid ""
"This standard defines the API for submitting data to an OpenRosa "
"compliant server and receiving a response from the server about the "
"submission. This API is designed to provide a base level of "
"interoperability between OpenRosa clients and servers while enabling "
"application-specific extensions as well."
msgstr ""

#: ../../openrosa-form-submission.rst:22
msgid "Form Submission"
msgstr ""

#: ../../openrosa-form-submission.rst:24
msgid ""
"OpenRosa servers must be able to receive XForms which are submitted by "
"clients over HTTP."
msgstr ""

#: ../../openrosa-form-submission.rst:26
msgid ""
"There are 3 major categories of requirements for submission which must be"
" fulfilled:"
msgstr ""

#: ../../openrosa-form-submission.rst:28
msgid "channel"
msgstr ""

#: ../../openrosa-form-submission.rst:29
msgid "content"
msgstr ""

#: ../../openrosa-form-submission.rst:30
msgid "correctness."
msgstr ""

#: ../../openrosa-form-submission.rst:35
msgid "Channel"
msgstr ""

#: ../../openrosa-form-submission.rst:37
msgid ""
"OpenRosa servers MUST provide a URI capable of accepting HTTP POST "
"Requests. Access controls, firewalls and geographic or networking "
"restrictions MAY limit the origins and/or clients that can access the "
"server."
msgstr ""

#: ../../openrosa-form-submission.rst:39
msgid ""
"The server MUST support HTTP 1.1 chunked transfer encoding for receiving "
"the POST content. There is no minimum set of standards for timeouts, "
"maximum content length, or other http configurations, but servers are "
"encouraged to support lenient connections and the largest possible "
"content size, since many of the connections will be from unreliable "
"channels and in environments where splitting content up is impractical."
msgstr ""

#: ../../openrosa-form-submission.rst:41
msgid ""
"For maximum compatibility with J2ME clients, it is recommended that a "
"server SHOULD NOT issue redirects."
msgstr ""

#: ../../openrosa-form-submission.rst:44
msgid ""
"Using digest authentication and https when communicating with a server "
"does not require any redirects --- you can have authentication and secure"
" transport without redirects."
msgstr ""

#: ../../openrosa-form-submission.rst:49
msgid "Content"
msgstr ""

#: ../../openrosa-form-submission.rst:51
msgid ""
"OpenRosa submissions (and responses) MUST provide headers conforming to "
"the :doc:`OpenRosa Request standard <openrosa-http>`."
msgstr ""

#: ../../openrosa-form-submission.rst:53
msgid ""
"Successful server responses MUST include an ``X-OpenRosa-Accept-Content-"
"Length`` header in addition to the :ref:`required OpenRosa Request "
"response headers <openrosa-responses>`. The ``X-OpenRosa-Accept-Content-"
"Length`` header specifies this server's recommended maximum size for a "
"POST body, in bytes."
msgstr ""

#: ../../openrosa-form-submission.rst:55
msgid ""
"Servers SHOULD include this header in their error responses. However, "
"clients MUST NOT rely on the presence of this header (or any OpenRosa "
"header) in every error response."
msgstr ""

#: ../../openrosa-form-submission.rst:58
msgid ""
"Overly-large requests sent to Google AppEngine will be rejected prior to "
"being sent to any server, and will therefore not contain this (or any) "
"OpenRosa header."
msgstr ""

#: ../../openrosa-form-submission.rst:60
msgid ""
"OpenRosa submissions are POSTed to servers as a multipart MIME Envelope "
"with at least 1 part --- the XML content of the form itself. Each of "
"these parts should adhere to the following requirements"
msgstr ""

#: ../../openrosa-form-submission.rst:65
msgid "MIME Envelope"
msgstr ""

#: ../../openrosa-form-submission.rst:66
msgid "Content Type: multipart/form-data"
msgstr ""

#: ../../openrosa-form-submission.rst:67
msgid "Contains Exactly 1 XForm Part"
msgstr ""

#: ../../openrosa-form-submission.rst:68
msgid "Contains 0 or More Additional Parts"
msgstr ""

#: ../../openrosa-form-submission.rst:73
msgid "XForm Part"
msgstr ""

#: ../../openrosa-form-submission.rst:75
msgid "Content Type: text/xml"
msgstr ""

#: ../../openrosa-form-submission.rst:76
msgid "Name: xml_submission_file"
msgstr ""

#: ../../openrosa-form-submission.rst:81
msgid "Additional Parts"
msgstr ""

#: ../../openrosa-form-submission.rst:83
msgid "Content Type: arbitrary"
msgstr ""

#: ../../openrosa-form-submission.rst:84
msgid "Name: matches an appropriate element inside of the XForm Element's XML."
msgstr ""

#: ../../openrosa-form-submission.rst:86
msgid ""
"Servers MAY be more permissive than this specification (for example, "
"allowing multipart/mixed for the mime envelope), but MUST be capable of "
"recognizing and properly receiving submissions in this format."
msgstr ""

#: ../../openrosa-form-submission.rst:91
msgid "Correctness"
msgstr ""

#: ../../openrosa-form-submission.rst:93
msgid ""
"The server MUST consume an entire HTTP POST in conformance with that "
"protocol. Once a POST is received, the range and structure of the "
"server's response is specified below."
msgstr ""

#: ../../openrosa-form-submission.rst:98
msgid "Extended Transmission Considerations"
msgstr ""

#: ../../openrosa-form-submission.rst:100
msgid ""
"If the client is capable of negotiating authenticated and/or secure "
"transmissions to the server, it is recommended that the client first "
"attempt a ``HEAD`` request to the server to negotiate the authentication "
"and channel security prior to the first ``POST`` of the data, regardless "
"of any channel security stated in the ``<submission>`` element of the "
"form. This ensures that submitted data is not inadvertently sent in the "
"clear on that first request due to the client device possessing an out-"
"of-date form definition with inaccurate ``<submission>`` content."
msgstr ""

#: ../../openrosa-form-submission.rst:102
msgid ""
"Issuing a ``HEAD`` request first also reduces overall transmission "
"bandwidth in instances where client authentication occurs. Most "
"authentication handshake protocols require the complete re-``POST`` of "
"the original request after the authentication is complete. By delaying "
"the ``POST`` of the data until after the authentication has been "
"negotiated on the ``HEAD`` request, overall transmission bandwidth is "
"reduced."
msgstr ""

#: ../../openrosa-form-submission.rst:104
msgid ""
"The client, upon receiving the ``HEAD`` response, can check that the "
"response contains the ``X-OpenRosa-Version`` header to indicate that the "
"host is an OpenRosa server (as opposed to a network login screen or proxy"
" page). In this way, the server can change the scheme from ``http`` to "
"``https`` or update the submission page URL without a wasted redirect "
"during the actual submission process. The client can also use the value "
"of the ``X-OpenRosa-Accept-Content-Length`` header to inform itself of "
"how big a POST body should be sent to this server. ODK Collect also "
"requires a 204 (No Content) status code in the HEAD response."
msgstr ""

#: ../../openrosa-form-submission.rst:106
msgid ""
"If a full ``POST`` of the form's XML submission and its additional parts "
"(for example, captured image, audio or video clips) would exceed the size"
" specified in the ``X-OpenRosa-Accept-Content-Length`` header (the "
"*maxSize*), it is recommended that the client split the ``POST`` into "
"multiple individual ``POST`` requests, each containing the form's XML "
"submission and one or more additional parts such that each partial "
"``POST`` request is no greater than *maxSize*; if a single additional "
"part is greater than *maxSize*, the ``POST`` should contain the form's "
"XML submission and that single additional part. Regardless of whether the"
" client observes and honors the ``X-OpenRosa-Accept-Content-Length`` "
"header, a compliant server with give its best effort to accept "
"submissions of any length."
msgstr ""

#: ../../openrosa-form-submission.rst:108
msgid ""
"The ``X-OpenRosa-Accept-Content-Length`` header is provided to avoid "
"failures that may otherwise arise due to restrictions on the overall size"
" of ``HTTP`` messages, or due to physical or virtual memory "
"configurations of the server."
msgstr ""

#: ../../openrosa-form-submission.rst:110
msgid ""
"The form's XML submission is sent on each ``POST`` so that a client can "
"avoid having any knowledge about the content of the files it is shipping "
"around. Doing so also places the fewest restrictions on how the server "
"handles the submission."
msgstr ""

#: ../../openrosa-form-submission.rst:115
msgid "Rationale for sending the form's XML submission"
msgstr ""

#: ../../openrosa-form-submission.rst:117
msgid ""
"To avoid sending the form's XML submission, you would need to inspect the"
" submission and send up its identifiying information. By avoiding "
"inspection of the submission, a much simpler Ajax-enabled webpage could "
"conform to this API."
msgstr ""

#: ../../openrosa-form-submission.rst:119
msgid ""
"On the server, having just the ``instanceID`` sent on subsequent ``POST``"
" requests might not be sufficient to process the request --- sending only"
" this information would burden those server implementations with "
"maintaining a mapping from the instanceID to the natural key for this "
"data. Not sending the form's XML submission in subsequent POSTs biases "
"against some server designs."
msgstr ""

#: ../../openrosa-form-submission.rst:121
#, python-format
msgid ""
"Finally, since most XML submission documents are smaller than 2K bytes, "
"and if you have a 10M byte threshold for splitting a submission across "
"multiple requests (a reasonable lower limit), you're burning only 0.02% "
"of your bandwidth with the retransmission."
msgstr ""

#: ../../openrosa-form-submission.rst:126
msgid "Server Response Format"
msgstr ""

#: ../../openrosa-form-submission.rst:128
msgid ""
"The server response format will be XML formatted, and the response body "
"will be an :ref:`OpenRosa Response <openrosa-responses>`."
msgstr ""

#: ../../openrosa-form-submission.rst:130
msgid "Example response:"
msgstr ""

#: ../../openrosa-form-submission.rst:138
msgid ""
"If the server is RESTful, the server MAY return an ``HTTP`` URI (using "
"the standard ``HTTP`` Location header) where the form can be found."
msgstr ""

#: ../../openrosa-form-submission.rst:140
msgid ""
"A form should not be assumed to be submitted until a ``201`` or ``202`` "
"response code is received with an OpenRosaResponse envelope body."
msgstr ""

#: ../../openrosa-form-submission.rst:145
msgid "Server Status Codes"
msgstr ""

#: ../../openrosa-form-submission.rst:147
msgid ""
"Server status codes will be the same as `standard http codes "
"<http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html>`_. These use the"
" general classification:"
msgstr ""

#: ../../openrosa-form-submission.rst:150
msgid "201-202"
msgstr ""

#: ../../openrosa-form-submission.rst:150
msgid "Successfully received by server."
msgstr ""

#: ../../openrosa-form-submission.rst:153
msgid "4XX"
msgstr ""

#: ../../openrosa-form-submission.rst:153
msgid "Client Error"
msgstr ""

#: ../../openrosa-form-submission.rst:156
msgid "5XX"
msgstr ""

#: ../../openrosa-form-submission.rst:156
msgid "Server Error"
msgstr ""

#: ../../openrosa-form-submission.rst:160
msgid ""
"``1XX`` (informational) and ``3XX`` (redirection) probably do not apply "
"to these POSTs."
msgstr ""

#: ../../openrosa-form-submission.rst:162
msgid "Some common interpretations of codes are below, but more could apply."
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Code"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "HTTP Meaning"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "ODK Meaning"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "200"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "UNUSED"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid ""
"Since the request is a post, a 200 response is not a sign of a successful"
" submission. Many intermediate proxies will return a 200 response for "
"gateway pages on WI-FI, etc, so receiving a 200 shouldn't be assumed to "
"be meaningful."
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "201"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Form Received"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Everything went great. Thanks for submitting."
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "202"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Accepted"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid ""
"We got and saved your data, but may not have fully processed it. You "
"should not try to resubmit."
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "204"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "No Content"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Status returned in response to a HEAD request."
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "401"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Unauthorized"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Client tried to post something it didn't have permission to post."
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "403"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Forbidden"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "You're not allowed to post to this server."
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "404"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Not Found"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Unknown URI endpoint, domain, or other"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "413"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Request too large"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "The request body is too large for the server to process"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "500"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Internal Server Error"
msgstr ""

#: ../../openrosa-form-submission.rst:1
msgid "Something went awry on the server and we're not sure what it was"
msgstr ""

